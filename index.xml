<?xml-stylesheet href="xsltforms/xsltforms.xsl" type="text/xsl"?>
<html 
  xmlns="http://www.w3.org/1999/xhtml"
  lang="fr"
  xmlns:ev="http://www.w3.org/2001/xml-events"
  xmlns:xf="http://www.w3.org/2002/xforms"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xpr="xpr"
  xmlns:eac="eac"
  xmlns:rico="rico"
  xpr:bogus="fix Firefox namespace issue"
  xlink:bogus="fix Firefox namespace issue"
  eac:bogus="fix Firefox namespace issue"
  rico:bogus="fix Firefox namespace issue">
  <head>
    <title>eac-cpf Xforms</title>
    <meta charset="utf-8" />
    <xf:model id="prosopo">
      <!-- xprProsopo -->
      <xf:action ev:event="xforms-ready">
        <xf:action 
          while="instance('xprProsopo')//eac:date[not(@standardDate)]
          | instance('xprProsopo')//eac:fromDate[not(@standardDate)]
          | instance('xprProsopo')//eac:toDate[not(@standardDate)]">
          <xf:insert 
            context="instance('xprProsopo')//eac:date[not(@standardDate)]
            | instance('xprProsopo')//eac:fromDate[not(@standardDate)]
            | instance('xprProsopo')//eac:toDate[not(@standardDate)]" 
            origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@standardDate"/>
        </xf:action>
        
        <xf:action 
          while="instance('xprProsopo')//eac:date[not(@notAfter)]
          | instance('xprProsopo')//eac:fromDate[not(@notAfter)]
          | instance('xprProsopo')//eac:toDate[not(@notAfter)]">
          <xf:insert 
            context="instance('xprProsopo')//eac:date[not(@notAfter)]
            | instance('xprProsopo')//eac:fromDate[not(@notAfter)]
            | instance('xprProsopo')//eac:toDate[not(@notAfter)]"
            origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@notAfter"/>
        </xf:action>
        
        <xf:action 
          while="instance('xprProsopo')//eac:date[not(@notBefore)]
          | instance('xprProsopo')//eac:fromDate[not(@notBefore)]
          | instance('xprProsopo')//eac:toDate[not(@notBefore)]">
          <xf:insert 
            context="instance('xprProsopo')//eac:date[not(@notBefore)]
            | instance('xprProsopo')//eac:fromDate[not(@notBefore)]
            | instance('xprProsopo')//eac:toDate[not(@notBefore)]"
            origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@notBefore"/>
        </xf:action>
        
        <xf:delete 
          if="instance('xprProsopo')//eac:identity[eac:entityType = '']/eac:nameEntry[eac:alternativeForm]" 
          ref="instance('xprProsopo')//eac:identity[eac:entityType = '']//eac:nameEntry[eac:alternativeForm]"/>
        
        <!--add maintenanceEvent for revision-->
        <xf:insert 
          if="/eac:eac-cpf/@xml:id"
          context="instance('xprProsopo')"
          origin="instance('xprProsopoCopy')/eac:control/eac:maintenanceHistory/eac:maintenanceEvent"
          nodeset="eac:control/eac:maintenanceHistory/eac:maintenanceEvent"
          at="1"
          position="before"/>
      </xf:action>
      <!-- xprProsopo main instance-->
      <xf:instance id="xprProsopo" src="_xprProsopoInstance.xml"/>
      <xf:bind id="identity" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:identity/@localType" required="true()"/>
      <xf:bind id="entityType" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType" required="true()"/>
      <xf:bind id="vedette" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[./eac:authorizedForm]/eac:part"/>
      <xf:bind id="nameEntry" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[./eac:alternativeForm]"/>
      <xf:bind id="chronItem" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem"/>
      <xf:bind id="chronItemType" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/@localType"/>
      <xf:bind id="chronItemDate" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/eac:date"/>
      <xf:bind id="chronItemPlace" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/eac:placeEntry"/>
      <xf:bind id="chronItemEvent" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/eac:event"/>
      <xf:bind id="relationRef" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:relations/eac:cpfRelation/@xlink:href" relevant="parent::eac:cpfRelation[not(@localType = 'new')]"/>
      <xf:bind id="chronItemInvolve" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/rico:involve"/>
      <xf:bind id="chronItemSource" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/xpr:source"/>
      <xf:bind id="controlSource" nodeset="instance('xprProsopo')/eac:control/eac:sources/eac:source/@xlink:href[not(. = '')][. = instance('xprProsopo')/eac:cpfDescription//xpr:source/@xlink:href or . = instance('xprSources')/xpr:source[@xml:id = instance('xprProsopo')/eac:cpfDescription//xpr:source/@xlink:href]]" readonly="true()"/>
      <xf:bind id="sourceLocalId" nodeset="instance('xprProsopo')//xpr:source/@localId" relevant="parent::xpr:source[@localType = 'new']"/>
      <!-- xprProsopoCopy for repeated sections in the main form (avoid setvalue when repeating a section)-->
      <xf:instance id="xprProsopoCopy" src="_xprProsopoInstance.xml"/>
      <xf:instance id="xprRelationsSubtype">
        <relations xmlns="eac" xmlns:xpr="xpr">
          <cpfRelation xpr:representative=""/>
        </relations>
      </xf:instance>
      
      <xf:instance id="xprEntitiesTypes">
        <entitiesSubTypes xmlns="xpr">
          <identity type="person">
            <label>Expert (tableau)</label>
            <value>expert</value>
          </identity>
          <identity type="person">
            <label>Expert (non inscrit)</label>
            <value>altExpert</value>
          </identity>
          <identity type="person">
            <label>Maçon</label>
            <value>mason</value>
          </identity>
          <identity type="person">
            <label>Autre (person)</label>
            <value>person</value>
          </identity>
          <identity type="corporateBody">
            <label>Office</label>
            <value>office</value>
          </identity>
          <identity type="corporateBody">
            <label>Autre</label>
            <value>org</value>
          </identity>
          <identity type="family">
            <label>famille</label>
            <value>family</value>
          </identity>
        </entitiesSubTypes>
      </xf:instance>
      
      <xf:instance id="xprPlaceTypes">
        <places xmlns="xpr">
          <type>
            <label>Naissance</label>
            <value>birthPlace</value>
          </type>
          <type>
            <label>Décès</label>
            <value>deathPlace</value>
          </type>
          <type>
            <label>Résidence</label>
            <value>residence</value>
          </type>
        </places>
      </xf:instance>
      
      <xf:instance id="xprRelationsTypes">
        <relations xmlns="xpr">
          <type>
            <label>Maritale</label>
            <value>rico:spouseRelationConnects</value>
          </type>
          <type>
            <label>Fratrie</label>
            <value>rico:siblingRelationConnects</value>
          </type>
          <type>
            <label>Parentale</label>
            <value>rico:childRelationsHasSource</value>
          </type>
          <type>
            <label>Enfant</label>
            <value>rico:childRelationsHasTarget</value>
          </type>
          <type>
            <label>Ascendance</label>
            <value>rico:descendanceRelationHasSource</value>
          </type>
          <type>
            <label>Descendance</label>
            <value>rico:descendanceRelationHasTarget</value>
          </type>
          <type>
            <label>Professionnelle</label>
            <value>xpr:professionalRelationHasTarget</value>
          </type>
          <type>
            <label>Tuteur des enfants</label>
            <value>xpr:chosenGuardianForHisChildren</value>
          </type>
        </relations>
      </xf:instance>
      
      <xf:instance id="xprEvents">
        <event xmlns="xpr">
          <type>
            <label>Naissance</label>
            <value>birth</value>
          </type>
          <type>
            <label>Mariage</label>
            <value>marriage</value>
          </type>
          <type>
            <label>Maîtrise</label>
            <value>master</value>
          </type>
          <type>
            <label>Achat d'office</label>
            <value>officePurchase</value>
          </type>
          <type>
            <label>Provision d'office</label>
            <value>provision</value>
          </type>
          <type>
            <label>Réception</label>
            <value>reception</value>
          </type>
          <type>
            <label>Présence dans les Almanachs</label>
            <value>almanacs</value>
          </type>
          <type>
            <label>Honorariat</label>
            <value>honorary</value>
          </type>
          <type>
            <label>Résignation</label>
            <value>relinquishment</value>
          </type>
          <type>
            <label>Vente d'office</label>
            <value>officeSale</value>
          </type>
          <type>
            <label>Suppression des offices</label>
            <value>officesEnding</value>
          </type>
          <type>
            <label>Dispense d'age</label>
            <value>exemption</value>
          </type>
          <type>
            <label>Sentence d'interdiction</label>
            <value>barringFromOffice</value>
          </type>
          <type>
            <label>Faillite</label>
            <value>bankruptcy</value>
          </type>
          <type>
            <label>Saisie réelle</label>
            <value>seizure</value>
          </type>
          <type>
            <label>Décès</label>
            <value>death</value>
          </type>
        </event>
      </xf:instance>
      
      
      <xf:action ev:event="submission">
        <!--
        /!\ send order note /!\
        An event is defined and three submissions are to be sent synchronously, one after one, according to a condition which should be true for one only.
        The first one (and the second one) will send again the same event producing a submission loop effect.
        But the first one (and the second one) is also altering the loop condition and it appears that, at the end, the 2 or 3 submissions are sent for the same event just before the latest event being caught.
        The easiest way to control this is to invert the order of the submissions: the one to be activated at the end is to be tested before the others to be activated repeatedly.
        -->
        <xf:send submission="submitBio"/>
        
      </xf:action>
      <xf:submission mode="synchronous" id="submitBio" resource="/xpr/biographies/put" method="put" replace="none">
        <xf:action ev:event="xforms-submit">
          <xf:delete nodeset="instance('xprProsopo')//@standardDate[. = '']"/>
          <xf:delete nodeset="instance('xprProsopo')//@notBefore[. = '']"/>
          <xf:delete nodeset="instance('xprProsopo')//@notAfter[. = '']"/>
          <xf:delete ref="instance('xprProsopo')//*[@localType = 'new']/@localType"/>
        </xf:action>
        
        <xf:action ev:event="xforms-submit-done">
          
        </xf:action>
        <xf:action ev:event="xforms-submit-error">
          <xf:message level="modal">Une erreur est apparue</xf:message>
          <xf:action 
            while="instance('xprProsopo')//eac:date[not(@standardDate)]
            | instance('xprProsopo')//eac:fromDate[not(@standardDate)]
            | instance('xprProsopo')//eac:toDate[not(@standardDate)]">
            <xf:insert 
              context="instance('xprProsopo')//eac:date[not(@standardDate)]
              | instance('xprProsopo')//eac:fromDate[not(@standardDate)]
              | instance('xprProsopo')//eac:toDate[not(@standardDate)]"
              origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@standardDate"/>
          </xf:action>
          <xf:action while="instance('xprProsopo')//eac:date[not(@notAfter)]
            | instance('xprProsopo')//eac:fromDate[not(@notAfter)]
            | instance('xprProsopo')//eac:toDate[not(@notAfter)]">
            <xf:insert context="instance('xprProsopo')//eac:date[not(@notAfter)]
              | instance('xprProsopo')//eac:fromDate[not(@notAfter)]
              | instance('xprProsopo')//eac:toDate[not(@notAfter)]"
              origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@notAfter"/>
          </xf:action>
          <xf:action
            while="instance('xprProsopo')//eac:date[not(@notBefore)]
            | instance('xprProsopo')//eac:fromDate[not(@notBefore)]
            | instance('xprProsopo')//eac:toDate[not(@notBefore)]">
            <xf:insert context="instance('xprProsopo')//eac:date[not(@notBefore)]
              | instance('xprProsopo')//eac:fromDate[not(@notBefore)]
              | instance('xprProsopo')//eac:toDate[not(@notBefore)]"
              origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@notBefore"/>
          </xf:action>
        </xf:action>
      </xf:submission>
    </xf:model>
  </head>
  <body>
    <form>
    <xf:switch>
        <xf:case id="prosopoPanel" selected="true">
            <!-- identity -->
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:identity">
            <xf:label>Identité</xf:label>
            <xf:select1 bind="entityType" appearance="full">
              <xf:label>Type d'entité</xf:label>
              <xf:item>
                <xf:label>personne</xf:label>
                <xf:value>person</xf:value>
                <xf:action ev:event="xforms-select">
                  <xf:setvalue 
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/@localType"
                    value="''"/>
                  <xf:delete ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]"/>
                  <xf:insert 
                    context="instance('xprProsopo')/eac:cpfDescription/eac:identity"
                    origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:identity/eac:nameEntry[eac:alternativeForm]"
                    nodeset="eac:nameEntry[eac:authorizedForm]"
                    position="after"/>
                </xf:action>
              </xf:item>
              <xf:item>
                <xf:label>office</xf:label>
                <xf:value>corporateBody</xf:value>
                <xf:action ev:event="xforms-select">
                  <xf:setvalue 
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/@localType"
                    value="''"/>
                  <xf:delete ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]"/>
                  <xf:insert
                    context="instance('xprProsopo')/eac:cpfDescription/eac:identity"
                    origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:identity/eac:nameEntry[eac:alternativeForm]"
                    nodeset="eac:nameEntry[eac:authorizedForm]" position="after"/>
                </xf:action>
              </xf:item>
              <xf:item>
                <xf:label>famille</xf:label>
                <xf:value>family</xf:value>
                <xf:action ev:event="xforms-select">
                  <xf:setvalue
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/@localType"
                    value="'family'"/>
                  <xf:delete ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]"/>
                  <xf:insert
                    context="instance('xprProsopo')/eac:cpfDescription/eac:identity"
                    origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:identity/eac:nameEntry[eac:alternativeForm]"
                    nodeset="eac:nameEntry[eac:authorizedForm]"
                    at="last()"
                    position="after"/>
                </xf:action>
              </xf:item>
            </xf:select1>
            <xf:input ref="@localType">
              <xf:label>Répertoire</xf:label>
            </xf:input>
            <xf:group>
              <xf:label>Forme(s) du nom</xf:label>
              <xf:repeat
                id="repeatName"
                nodeset="eac:nameEntry[child::eac:alternativeForm]"
                appearance="full">
                <xf:label>Forme attestée</xf:label>
                <xf:repeat
                  id="namePart"
                  nodeset="eac:part"
                  appearance="full">
                  <xf:input ref=".">
                    <xf:label>Composante du nom</xf:label>
                  </xf:input>
                  <xf:select1 ref="@localType">
                    <xf:label>Type de composante</xf:label>
                    <xf:item>
                      <xf:label>Nom</xf:label>
                      <xf:value>surname</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Prénom</xf:label>
                      <xf:value>forename</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Particule</xf:label>
                      <xf:value>particle</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Titre d’appel</xf:label>
                      <xf:value>common</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Titre académique</xf:label>
                      <xf:value>academic</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Titre religieux</xf:label>
                      <xf:value>religious</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Titre de noblesse</xf:label>
                      <xf:value>nobiliary</xf:value>
                    </xf:item>
                    <xf:item>
                      <xf:label>Dénomination</xf:label>
                      <xf:value>officeName</xf:value>
                    </xf:item>
                  </xf:select1>
                  <xf:trigger class="delete">
                    <xf:label>Supprimer une composante du nom</xf:label>
                    <xf:delete
                      if="count(parent::eac:nameEntry/eac:part) > 1"
                      ev:event="DOMActivate"
                      nodeset="."/>
                  </xf:trigger>
                </xf:repeat>
                <xf:trigger class="insert">
                  <xf:label>Insérer une nouvelle composante du nom</xf:label>
                  <xf:insert
                    ev:event="DOMActivate"
                    origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]/eac:part"
                    context="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm][index('repeatName')]"
                    nodeset="eac:part"
                    at="index('namePart')"
                    position="after"/>
                </xf:trigger>
                <xf:group>
                  <xf:label>Sources</xf:label>
                  <xf:repeat id="repeatNameSource" nodeset="xpr:source">
                    <xf:var name="source" value="."/>
                    <xf:label>Source</xf:label>
                    <xf:input ref=".">
                      <xf:label>Côte</xf:label>
                    </xf:input>
                    <xf:trigger ref="." class="delete">
                      <xf:label>Supprimer une source</xf:label>
                      <xf:delete
                        if="count(ancestor::eac:nameEntry/xpr:source) &gt; 1"
                        nodeset="."
                        at="1"
                        ev:event="DOMActivate"/>
                      <xf:help>Supprimer une source</xf:help>
                    </xf:trigger>
                  </xf:repeat>
                  <xf:trigger class="insert">
                    <xf:label>Nouvelle source</xf:label>
                    <xf:action ev:event="DOMActivate">
                      <xf:insert
                        context="."
                        origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:identity/eac:nameEntry[eac:alternativeForm]/xpr:source"
                        nodeset="xpr:source[last()]"
                        position="after"
                        ev:event="DOMActivate"/>
                    </xf:action>
                    <xf:help>Ajouter une source</xf:help>
                  </xf:trigger>
                </xf:group>
                <xf:trigger ref=".[eac:alternativeForm]">
                  <xf:label>Supprimer une forme du nom</xf:label>
                  <xf:delete
                    if="count(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]) &gt; 1"
                    nodeset="."
                    at="1"
                    ev:event="DOMActivate"/>
                  <xf:help>Supprimer une forme du nom</xf:help>
                </xf:trigger>
              </xf:repeat>
              <xf:trigger ref=".[eac:nameEntry[eac:alternativeForm]]" class="insert">
                <xf:label>Nouvelle forme attestée du nom</xf:label>
                <xf:action ev:event="DOMActivate">
                  <xf:insert
                    context="."
                    origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:identity/eac:nameEntry[eac:alternativeForm]"
                    nodeset="eac:nameEntry[eac:alternativeForm][last()]"
                    position="after"
                    ev:event="DOMActivate"/>
                  <xf:delete
                    if="eac:entityType = 'person'"
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]//eac:part[@localType='officeName']"/>
                  <xf:delete
                    if="eac:entityType = 'corporateBody'"
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]//eac:part[not(@localType='officeName')]"/>
                  <xf:delete
                    if="eac:entityType = 'family'"
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]//eac:part[not(@localType='surname')]"/>
                </xf:action>
                <xf:help>Ajouter une forme attestée du nom</xf:help>
              </xf:trigger>
              <xf:input ref="eac:nameEntry[child::eac:authorizedForm]/eac:part" incremental="true">
                <xf:label>Forme contrôlée</xf:label>
              </xf:input>
              <!--<xf:select1 ref="instance('xprIdentities')/eac:identity">
                <xf:label>Établir la vedette à partir d'une forme attestée</xf:label>
                <!-\- @todo voir avec EC pour le détail, pour l'instant uniquement nom et prénom(s)-\->
                <xf:item>
                  <xf:label/>
                  <xf:value/>
                </xf:item>
                <xf:itemset model="prosopo" nodeset="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:alternativeForm]">
                  <xf:label
                    value="
                    concat(
                    if(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType[. = 'person'], concat(eac:part[@localType='surname'], ', ', eac:part[@localType='forename'], ' (', if(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@*[not(. = '')], substring(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@*[not(. = '')], 1, 4), '?'), ' - ', if(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:toDate/@*[not(. = '')], substring(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:toDate/@*[not(. = '')], 1, 4), '?'), ')'), ''),
                    if(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType[. = 'corporateBody'], concat(eac:part[@localType='officeName'], ''), ''),
                    if(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType[. = 'family'], concat(eac:part[@localType='surname'], ''), '')
                    )"/>
                  <xf:copy ref="."/>
                </xf:itemset>
                <xf:action
                  if="instance('xprIdentities')/eac:identity/*:nameEntry//*:part[not(. = '')]"
                  ev:event="xforms-value-changed">
                  <!-\- @rmq lors de la copie le préfixe de l'espace de nom saute => utilisation de '*:element' -\->
                  <!-\- @rmq pour récupérer toutes les valeurs, faire une boucle while
                    avec une itération (faire une instance('xprIterator') pour boucler
                    sur eac:part qui ne sont pas vides et trouver leur position-\->
                  <xf:setvalue
                    ref="instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:nameEntry[child::eac:authorizedForm]/eac:part"
                    value="
                    concat(
                    if(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType[. = 'person'], concat(instance('xprIdentities')/eac:identity/*:nameEntry/*:part[@localType='surname'], ', ', instance('xprIdentities')/eac:identity/*:nameEntry/*:part[@localType='forename'], ' (', if(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@*[not(. = '')], substring(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:fromDate/@*[not(. = '')], 1, 4), '?'), ' - ', if(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:toDate/@*[not(. = '')], substring(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange/eac:toDate/@*[not(. = '')], 1, 4), '?'), ')'), ''),
                    if(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType[. = 'corporateBody'], concat(instance('xprIdentities')/eac:identity/*:nameEntry/*:part[@localType='officeName'], ''), ''),
                    if(instance('xprProsopo')/eac:cpfDescription/eac:identity/eac:entityType[. = 'family'], concat(instance('xprIdentities')/eac:identity/*:nameEntry/*:part[@localType='surname'], ''), '')
                    )"/>
                  <xf:refresh/>
                </xf:action>
              </xf:select1>-->
            </xf:group>
          </xf:group>
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange">
            <xf:label>Existence</xf:label>
            <xf:group ref="eac:fromDate">
              <xf:label>Naissance</xf:label>
              <xf:input ref="@standardDate">
                <xf:label>Certaine</xf:label>
              </xf:input>
              <xf:input ref="@notAfter">
                <xf:label>Avant le</xf:label>
              </xf:input>
              <xf:input ref="@notBefore">
                <xf:label>Après le</xf:label>
              </xf:input>
            </xf:group>
            <xf:group ref="eac:toDate">
              <xf:label>Décès</xf:label>
              <xf:input ref="@standardDate">
                <xf:label>Certaine</xf:label>
              </xf:input>
              <xf:input ref="@notAfter">
                <xf:label>Avant le</xf:label>
              </xf:input>
              <xf:input ref="@notBefore">
                <xf:label>Après le</xf:label>
              </xf:input>
            </xf:group>
          </xf:group>
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription[eac:identity/eac:entityType = 'person']/eac:description/eac:localDescription[@localType='sex']">
            <xf:select1 ref="eac:term">
              <xf:label>Sexe</xf:label>
              <xf:item>
                <xf:label>Homme</xf:label>
                <xf:value>male</xf:value>
              </xf:item>
              <xf:item>
                <xf:label>Femme</xf:label>
                <xf:value>female</xf:value>
              </xf:item>
            </xf:select1>
          </xf:group>
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:places">
            <xf:label>Adresses</xf:label>
            <xf:repeat id="repeatPlace" nodeset="eac:place">
              <xf:label>Adresse</xf:label>
              <xf:input ref="eac:placeEntry">
                <xf:label>Intitulé</xf:label>
              </xf:input>
              <xf:group ref="eac:dateSet">
                <xf:repeat id="repeatPlaceDate" nodeset="*">
                  <xf:label>Date</xf:label>
                  <xf:trigger>
                    <xf:label>
                      <xf:output value="if(.[self::eac:date], 'Intervalle', 'Date Unique')"/>
                    </xf:label>
                    <xf:action
                      if="self::eac:date"
                      ev:event="DOMActivate">
                      <xf:insert
                        context="ancestor::eac:dateSet"
                        origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange"
                        nodeset="*[index('repeatPlaceDate')]"
                        position="after"/>
                      <xf:setvalue
                        ref="following-sibling::eac:dateRange[1]/eac:fromDate/@standardDate"
                        value="current()/@standardDate"/>
                      <xf:setvalue
                        ref="following-sibling::eac:dateRange[1]/eac:fromDate/@notAfter"
                        value="current()/@notAfter"/>
                      <xf:setvalue
                        ref="following-sibling::eac:dateRange[1]/eac:fromDate/@notBefore"
                        value="current()/@notBefore"/>
                      <xf:delete nodeset="."/>
                    </xf:action>
                    <xf:action
                      if="self::eac:dateRange"
                      ev:event="DOMActivate">
                      <xf:insert
                        context="ancestor::eac:dateSet"
                        origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:places/eac:place/eac:dateSet/eac:date"
                        nodeset="*[index('repeatPlaceDate')]"
                        position="after"/>
                      <xf:setvalue
                        ref="./following-sibling::eac:date[1]/@standardDate"
                        value="current()/eac:fromDate/@standardDate"/>
                      <xf:setvalue
                        ref="./following-sibling::eac:date[1]/@notAfter"
                        value="current()/eac:fromDate/@notAfter"/>
                      <xf:setvalue
                        ref="./following-sibling::eac:date[1]/@notBefore"
                        value="current()/eac:fromDate/@notBefore"/>
                      <xf:delete nodeset="."/>
                    </xf:action>
                  </xf:trigger>
                  <xf:group>
                    <xf:input
                      ref="@standardDate
                      | eac:fromDate/@standardDate">
                      <xf:label>Certaine</xf:label>
                    </xf:input>
                    <xf:input
                      ref="@notAfter
                      | eac:fromDate/@notAfter">
                      <xf:label>Avant le</xf:label>
                    </xf:input>
                    <xf:input
                      ref="@notBefore
                      | eac:fromDate/@notBefore">
                      <xf:label>Après le</xf:label>
                    </xf:input>
                  </xf:group>
                  <xf:group ref="eac:toDate">
                    <xf:input ref="@standardDate">
                      <xf:label>Certaine</xf:label>
                    </xf:input>
                    <xf:input ref="@notAfter">
                      <xf:label>Avant le</xf:label>
                    </xf:input>
                    <xf:input ref="@notBefore">
                      <xf:label>Après le</xf:label>
                    </xf:input>
                  </xf:group>
                  <xf:trigger class="delete">
                    <xf:label>Supprimer une date</xf:label>
                    <xf:delete
                      if="count(ancestor::eac:dateSet/*) > 1"
                      nodeset="."
                      at="1"
                      ev:event="DOMActivate"/>
                    <xf:help>Supprimer une date</xf:help>
                  </xf:trigger>
                </xf:repeat>
                <xf:trigger class="insert">
                  <xf:label>Ajouter une date</xf:label>
                  <xf:action ev:event="DOMActivate">
                    <xf:insert
                      context="."
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:places/eac:place/eac:dateSet/eac:date"
                      nodeset="*[last()]"
                      position="after"
                      ev:event="DOMActivate"/>
                  </xf:action>
                  <xf:help>Ajouter une date</xf:help>
                </xf:trigger>
              </xf:group>
              <xf:input ref="eac:descriptiveNote">
                <xf:label>Note</xf:label>
              </xf:input>
              <xf:trigger class="delete">
                <xf:label>Supprimer un lieu</xf:label>
                <xf:delete
                  if="count(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:places/eac:place) > 1"
                  nodeset="."
                  at="1"
                  ev:event="DOMActivate"/>
                <xf:help>Supprimer un lieu</xf:help>
              </xf:trigger>
            </xf:repeat>
            <xf:trigger class="insert">
              <xf:label>Ajouter un lieu</xf:label>
              <xf:action ev:event="DOMActivate">
                <xf:insert
                  context="."
                  origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:places/eac:place"
                  nodeset="eac:place[last()]"
                  position="after"
                  ev:event="DOMActivate"/>
              </xf:action>
              <xf:help>Ajouter un lieu</xf:help>
            </xf:trigger>
          </xf:group>
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:occupations">
            <xf:label>Occupations</xf:label>
            <xf:repeat id="repeatOccupation" nodeset="eac:occupation">
              <xf:input ref="eac:term">
                <xf:label>Intitulé</xf:label>
              </xf:input>
              <xf:group ref="eac:date">
                <xf:label>Date</xf:label>
                <xf:trigger>
                  <xf:label>Intervalle</xf:label>
                  <xf:action ev:event="DOMActivate" if="self::eac:date">
                    <xf:insert
                      context="ancestor::eac:occupation"
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange"
                      nodeset="eac:term"
                      position="after"/>
                    <xf:setvalue
                      ref="./ancestor::eac:occupation/eac:dateRange/eac:fromDate/@standardDate"
                      value="current()/@standardDate"/>
                    <xf:setvalue
                      ref="./ancestor::eac:occupation/eac:dateRange/eac:fromDate/@notAfter"
                      value="current()/@notAfter"/>
                    <xf:setvalue
                      ref="./ancestor::eac:occupation/eac:dateRange/eac:fromDate/@notBefore"
                      value="current()/@notBefore"/>
                    <xf:delete nodeset="."/>
                  </xf:action>
                </xf:trigger>
                <xf:input ref="@standardDate">
                  <xf:label>Certaine</xf:label>
                </xf:input>
                <xf:input ref="@notAfter">
                  <xf:label>Avant le</xf:label>
                </xf:input>
                <xf:input ref="@notBefore">
                  <xf:label>Après le</xf:label>
                </xf:input>
              </xf:group>
              <xf:group ref="eac:dateRange">
                <xf:label>Intervalle</xf:label>
                <xf:trigger>
                  <xf:label>Date unique</xf:label>
                  <xf:action ev:event="DOMActivate" if="self::eac:dateRange">
                    <xf:insert
                      context="ancestor::eac:occupation"
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:occupations/eac:occupation/eac:date"
                      nodeset="eac:term"
                      position="after"/>
                    <xf:setvalue
                      ref="./ancestor::eac:occupation/eac:date/@standardDate"
                      value="current()/eac:fromDate/@standardDate"/>
                    <xf:setvalue
                      ref="./ancestor::eac:occupation/eac:date/@notAfter"
                      value="current()/eac:fromDate/@notAfter"/>
                    <xf:setvalue
                      ref="./ancestor::eac:occupation/eac:date/@notBefore"
                      value="current()/eac:fromDate/@notBefore"/>
                    <xf:delete nodeset="."/>
                  </xf:action>
                </xf:trigger>
                <xf:group ref="eac:fromDate">
                  <xf:label>Début</xf:label>
                  <xf:input ref="@standardDate">
                    <xf:label>Certaine</xf:label>
                  </xf:input>
                  <xf:input ref="@notAfter">
                    <xf:label>Avant le</xf:label>
                  </xf:input>
                  <xf:input ref="@notBefore">
                    <xf:label>Après le</xf:label>
                  </xf:input>
                </xf:group>
                <xf:group ref="eac:toDate">
                  <xf:label>Fin</xf:label>
                  <xf:input ref="@standardDate">
                    <xf:label>Certaine</xf:label>
                  </xf:input>
                  <xf:input ref="@notAfter">
                    <xf:label>Avant le</xf:label>
                  </xf:input>
                  <xf:input ref="@notBefore">
                    <xf:label>Après le</xf:label>
                  </xf:input>
                </xf:group>
              </xf:group>
              <xf:input ref="eac:descriptiveNote">
                <xf:label>Note</xf:label>
              </xf:input>
              <xf:trigger class="delete">
                <xf:label>Supprimer une occupation</xf:label>
                <xf:delete
                  if="count(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:occupations/eac:occupation) > 1"
                  nodeset="."
                  at="1"
                  ev:event="DOMActivate"/>
                <xf:help>Supprimer une occupation</xf:help>
              </xf:trigger>
            </xf:repeat>
            <xf:trigger class="insert">
              <xf:label>Ajouter une occupation</xf:label>
              <xf:action ev:event="DOMActivate">
                <xf:insert
                  nodeset="eac:occupation"
                  at="last()"
                  position="after"
                  ev:event="DOMActivate"/>
                <xf:setvalue
                  ref="eac:occupation[last()]//*
                  | eac:occupation[last()]//@*"
                  value="''"/>
              </xf:action>
              <xf:help>Ajouter une occupation</xf:help>
            </xf:trigger>
          </xf:group>
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:functions">
            <xf:label>Fonctions</xf:label>
            <xf:repeat id="repeatFunction" nodeset="eac:function">
              <xf:input ref="eac:term">
                <xf:label>Intitulé</xf:label>
              </xf:input>
              <xf:group ref="eac:date">
                <xf:label>Date</xf:label>
                <xf:trigger>
                  <xf:label>Intervalle</xf:label>
                  <xf:action ev:event="DOMActivate" if="self::eac:date">
                    <xf:insert
                      context="ancestor::eac:function"
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange"
                      nodeset="eac:term"
                      position="after"/>
                    <xf:setvalue
                      ref="./ancestor::eac:function/eac:dateRange/eac:fromDate/@standardDate"
                      value="current()/@standardDate"/>
                    <xf:setvalue
                      ref="./ancestor::eac:function/eac:dateRange/eac:fromDate/@notAfter"
                      value="current()/@notAfter"/>
                    <xf:setvalue
                      ref="./ancestor::eac:function/eac:dateRange/eac:fromDate/@notBefore"
                      value="current()/@notBefore"/>
                    <xf:delete nodeset="."/>
                  </xf:action>
                </xf:trigger>
                <xf:input ref="@standardDate">
                  <xf:label>Certaine</xf:label>
                </xf:input>
                <xf:input ref="@notAfter">
                  <xf:label>Avant le</xf:label>
                </xf:input>
                <xf:input ref="@notBefore">
                  <xf:label>Après le</xf:label>
                </xf:input>
              </xf:group>
              <xf:group ref="eac:dateRange">
                <xf:label>Intervalle</xf:label>
                <xf:trigger>
                  <xf:label>Date unique</xf:label>
                  <xf:action ev:event="DOMActivate" if="self::eac:dateRange">
                    <xf:insert
                      context="ancestor::eac:function"
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:functions/eac:function/eac:date"
                      nodeset="eac:term"
                      position="after"/>
                    <xf:setvalue
                      ref="./ancestor::eac:function/eac:date/@standardDate"
                      value="current()/eac:fromDate/@standardDate"/>
                    <xf:setvalue
                      ref="./ancestor::eac:function/eac:date/@notAfter"
                      value="current()/eac:fromDate/@notAfter"/>
                    <xf:setvalue
                      ref="./ancestor::eac:function/eac:date/@notBefore"
                      value="current()/eac:fromDate/@notBefore"/>
                    <xf:delete nodeset="."/>
                  </xf:action>
                </xf:trigger>
                <xf:group ref="eac:fromDate">
                  <xf:label>Début</xf:label>
                  <xf:input ref="@standardDate">
                    <xf:label>Certaine</xf:label>
                  </xf:input>
                  <xf:input ref="@notAfter">
                    <xf:label>Avant le</xf:label>
                  </xf:input>
                  <xf:input ref="@notBefore">
                    <xf:label>Après le</xf:label>
                  </xf:input>
                </xf:group>
                <xf:group ref="eac:toDate">
                  <xf:label>Fin</xf:label>
                  <xf:input ref="@standardDate">
                    <xf:label>Certaine</xf:label>
                  </xf:input>
                  <xf:input ref="@notAfter">
                    <xf:label>Avant le</xf:label>
                  </xf:input>
                  <xf:input ref="@notBefore">
                    <xf:label>Après le</xf:label>
                  </xf:input>
                </xf:group>
              </xf:group>
              <xf:input ref="eac:descriptiveNote/eac:p">
                <xf:label>Note</xf:label>
              </xf:input>
              <xf:trigger class="delete">
                <xf:label>Supprimer une fonction</xf:label>
                <xf:delete
                  if="count(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:functions/eac:function) > 1"
                  nodeset="."
                  at="1"
                  ev:event="DOMActivate"/>
                <xf:help>Supprimer une fonction</xf:help>
              </xf:trigger>
            </xf:repeat>
            <xf:trigger class="insert">
              <xf:label>Ajouter une fonction</xf:label>
              <xf:action ev:event="DOMActivate">
                <xf:insert
                  context="."
                  origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:functions/eac:function"
                  nodeset="eac:function[last()]"
                  position="after"
                  ev:event="DOMActivate"/>
              </xf:action>
              <xf:help>Ajouter une fonction</xf:help>
            </xf:trigger>
          </xf:group>
          <xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList">
            <xf:label>Événements</xf:label>
            <xf:repeat id="repeatChronItem" bind="chronItem" appearance="full">
              <xf:label>Événement</xf:label>
              <xf:input ref="@localType">
                <xf:label>Type</xf:label>
              </xf:input>
              <xf:group ref="eac:date">
                <xf:label>Date</xf:label>
                <xf:trigger>
                  <xf:label>Intervalle</xf:label>
                  <xf:action ev:event="DOMActivate" if="self::eac:date">
                    <xf:insert
                      context="ancestor::eac:chronItem"
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:existDates/eac:dateRange"
                      nodeset="eac:date"
                      position="before"/>
                    <xf:setvalue
                      ref="./ancestor::eac:chronItem/eac:dateRange/eac:fromDate/@standardDate"
                      value="current()/@standardDate"/>
                    <xf:setvalue
                      ref="./ancestor::eac:chronItem/eac:dateRange/eac:fromDate/@notAfter"
                      value="current()/@notAfter"/>
                    <xf:setvalue
                      ref="./ancestor::eac:chronItem/eac:dateRange/eac:fromDate/@notBefore"
                      value="current()/@notBefore"/>
                    <xf:delete nodeset="."/>
                  </xf:action>
                </xf:trigger>
                <xf:input ref="@standardDate">
                  <xf:label>Certaine</xf:label>
                </xf:input>
                <xf:input ref="@notAfter">
                  <xf:label>Avant le</xf:label>
                </xf:input>
                <xf:input ref="@notBefore">
                  <xf:label>Après le</xf:label>
                </xf:input>
              </xf:group>
              <xf:group ref="eac:dateRange">
                <xf:label>Intervalle</xf:label>
                <xf:trigger>
                  <xf:label>Date unique</xf:label>
                  <xf:action
                    ev:event="DOMActivate"
                    if="self::eac:dateRange">
                    <xf:insert
                      context="ancestor::eac:chronItem"
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/eac:date"
                      nodeset="eac:dateRange"
                      position="before"/>
                    <xf:setvalue
                      ref="./ancestor::eac:chronItem/eac:date/@standardDate"
                      value="current()/eac:fromDate/@standardDate"/>
                    <xf:setvalue
                      ref="./ancestor::eac:chronItem/eac:date/@notAfter"
                      value="current()/eac:fromDate/@notAfter"/>
                    <xf:setvalue
                      ref="./ancestor::eac:chronItem/eac:date/@notBefore"
                      value="current()/eac:fromDate/@notBefore"/>
                    <xf:delete nodeset="."/>
                  </xf:action>
                </xf:trigger>
                <xf:group ref="eac:fromDate">
                  <xf:label>Début</xf:label>
                  <xf:input ref="@standardDate">
                    <xf:label>Certaine</xf:label>
                  </xf:input>
                  <xf:input ref="@notAfter">
                    <xf:label>Avant le</xf:label>
                  </xf:input>
                  <xf:input ref="@notBefore">
                    <xf:label>Après le</xf:label>
                  </xf:input>
                </xf:group>
                <xf:group ref="eac:toDate">
                  <xf:label>Fin</xf:label>
                  <xf:input ref="@standardDate">
                    <xf:label>Certaine</xf:label>
                  </xf:input>
                  <xf:input ref="@notAfter">
                    <xf:label>Avant le</xf:label>
                  </xf:input>
                  <xf:input ref="@notBefore">
                    <xf:label>Après le</xf:label>
                  </xf:input>
                </xf:group>
              </xf:group>
              <xf:input ref="eac:placeEntry">
                <xf:label>Lieu</xf:label>
              </xf:input>
              <xf:input ref="eac:event">
                <xf:label>Intitulé</xf:label>
              </xf:input>
              <xf:input ref="xpr:cost">
                <xf:label>Coût</xf:label>
              </xf:input>
              <xf:repeat id="repeatParticipant"
                nodeset="rico:participant">
                <xf:var name="participant" value="."/>
                <xf:label>Participant</xf:label>
                <xf:input ref=".">
                  <xf:label>Patronyme</xf:label>
                </xf:input>
                <xf:trigger class="delete">
                  <xf:label>Supprimer un participant</xf:label>
                  <xf:delete nodeset="." ev:event="DOMActivate"/>
                  <xf:help>Supprimer un participant</xf:help>
                </xf:trigger>
              </xf:repeat>
              <xf:trigger class="insert">
                <xf:label>Ajouter un participant</xf:label>
                <xf:insert
                  if="rico:participant"
                  context="."
                  origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/rico:participant"
                  nodeset="rico:participant[last()]"
                  position="after"
                  ev:event="DOMActivate"/>
                <xf:insert
                  if="not(rico:participant)"
                  context="."
                  origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/rico:participant"
                  nodeset="eac:event"
                  position="after"
                  ev:event="DOMActivate"/>
                <xf:help>Ajouter un participant</xf:help>
              </xf:trigger>
              <xf:group>
                <xf:label>Sources</xf:label>
                <xf:repeat id="repeatEventSource" nodeset="xpr:source">
                  <xf:var name="source" value="."/>
                  <xf:label>Source</xf:label>
                  <xf:input ref="@xlink:href" incremental="true">
                    <xf:label>Côte</xf:label>
                  </xf:input>
                  <xf:input ref=".">
                    <xf:label>Commentaire</xf:label>
                  </xf:input>
                  <xf:trigger ref="." class="delete">
                    <xf:label>Supprimer une source</xf:label>
                    <xf:delete
                      if="count(ancestor::eac:nameEntry/xpr:source) &gt; 1"
                      nodeset="."
                      at="1"
                      ev:event="DOMActivate"/>
                    <xf:help>Supprimer une source</xf:help>
                  </xf:trigger>
                </xf:repeat>
                <xf:trigger class="insert">
                  <xf:label>Nouvelle source</xf:label>
                  <xf:action ev:event="DOMActivate">
                    <xf:insert
                      context="."
                      origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem/xpr:source"
                      nodeset="xpr:source[last()]"
                      position="after"
                      ev:event="DOMActivate"/>
                  </xf:action>
                  <xf:help>Ajouter une source</xf:help>
                </xf:trigger>
              </xf:group>
              <xf:trigger class="delete">
                <xf:label>Supprimer un événement</xf:label>
                <xf:delete
                  if="count(instance('xprProsopo')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem) > 1"
                  nodeset="."
                  at="1"
                  ev:event="DOMActivate"/>
                <xf:help>Supprimer un événement</xf:help>
              </xf:trigger>
            </xf:repeat>
            <xf:trigger class="insert">
              <xf:label>Ajouter un événement</xf:label>
              <xf:action ev:event="DOMActivate">
                <xf:insert
                  context="."
                  origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:description/eac:biogHist/eac:chronList/eac:chronItem"
                  nodeset="eac:chronItem[last()]"
                  position="after"
                  ev:event="DOMActivate"/>
              </xf:action>
              <xf:help>Ajouter un événement</xf:help>
            </xf:trigger>
          </xf:group>
          <!--<xf:group ref="instance('xprProsopo')/eac:cpfDescription/eac:relations">
            <xf:label>Relations</xf:label>
            <xf:repeat id="repeatRelation" nodeset="eac:cpfRelation">
              <xf:var name="relation" value="."/>
              <xf:label>Relation</xf:label>
              <xf:select1 ref="@xlink:href" incremental="true">
                <xf:itemset model="prosopo" nodeset="instance('xprEntities')/xpr:entity">
                  <xf:label ref="xpr:label"/>
                  <xf:value value="concat('#', @xml:id)"/>
                </xf:itemset>
              </xf:select1>
              <xf:select1 ref="@xlink:arcrole" incremental="true">
                <xf:label>Type de relation</xf:label>
                <xf:itemset model="prosopo" nodeset="instance('xprRelationsTypes')/xpr:type">
                  <xf:label ref="xpr:label"/>
                  <xf:value ref="xpr:value"/>
                </xf:itemset>
              </xf:select1>
              <xf:input ref="eac:descriptiveNote/eac:p">
                <xf:label>Note</xf:label>
              </xf:input>
              <xf:group>
                <xf:label>Sources</xf:label>
                <xf:repeat id="repeatRelationSource" nodeset="xpr:source">
                  <xf:var name="source" value="."/>
                  <xf:label>Source</xf:label>
                  <xf:select1 ref="@xlink:href" incremental="true">
                    <xf:itemset model="source" nodeset="instance('xprSources')/xpr:source">
                      <xf:label ref="."/>
                      <!-\-<xf:value ref="choose(@xml:id, @xml:id, .)"/>-\->
                      <xf:value value="concat('#', @xml:id)"/>
                    </xf:itemset>
                  </xf:select1>
                  <xf:input ref=".">
                    <xf:label>commentaire</xf:label>
                  </xf:input>
                  <xf:trigger ref="." class="delete">
                    <xf:label>Supprimer une source</xf:label>
                    <xf:delete nodeset="." at="1" if="count(ancestor::eac:nameEntry/xpr:source) &gt; 1" ev:event="DOMActivate"/>
                    <xf:help>Supprimer une source</xf:help>
                  </xf:trigger>
                </xf:repeat>
                <xf:trigger class="insert">
                  <xf:label>Nouvelle source</xf:label>
                  <xf:action ev:event="DOMActivate">
                    <xf:insert context="." origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:relations/eac:cpfRelation/xpr:source" nodeset="xpr:source[last()]" position="after" ev:event="DOMActivate"/>
                  </xf:action>
                  <xf:help>Ajouter une source</xf:help>
                </xf:trigger>
              </xf:group>
              <xf:trigger ref="." class="delete">
                <xf:label>Supprimer une relation</xf:label>
                <xf:delete nodeset="." at="1" if="count(instance('xprProsopo')/eac:cpfDescription/eac:relations/eac:cpfRelation) &gt; 1" ev:event="DOMActivate"/>
                <xf:help>Supprimer une relation</xf:help>
              </xf:trigger>
            </xf:repeat>
            <xf:trigger class="insert">
              <xf:label>Nouvelle une relation</xf:label>
              <xf:action ev:event="DOMActivate">
                <xf:insert context="."
                  origin="instance('xprProsopoCopy')/eac:cpfDescription/eac:relations/eac:cpfRelation"
                  nodeset="eac:cpfRelation"
                  at="last()"
                  position="after"
                  ev:event="DOMActivate"/>
              </xf:action>
              <xf:help>Ajouter une relation</xf:help>
            </xf:trigger>
          </xf:group>-->
            <!--<span class="save">
                <xf:select1 ref="instance('xprProsopo')/eac:control/eac:localControl/eac:term" appearance="full" incremental="true">
                    <xf:label>
                        <span>Statut</span>
                    </xf:label>
                    <xf:item>
                        <xf:label>En cours</xf:label>
                        <xf:value>in progress</xf:value>
                    </xf:item>
                    <xf:item>
                        <xf:label>À revoir</xf:label>
                        <xf:value>to revise</xf:value>
                    </xf:item>
                    <xf:item>
                        <xf:label>Terminée</xf:label>
                        <xf:value>completed</xf:value>
                    </xf:item>
                </xf:select1>
                <xf:dialog id="control">
                    <xf:group ref="eac:control/eac:maintenanceHistory/eac:maintenanceEvent[1]">
                        <xf:input ref="eac:eventDescription">
                            <xf:label>Motif de la révision</xf:label>
                        </xf:input>
                    </xf:group>
                    <xf:trigger>
                        <xf:label>Annuler</xf:label>
                        <xf:hide ev:event="DOMActivate" dialog="control"/>
                    </xf:trigger>
                    <xf:trigger>
                        <xf:label>Enregistrer</xf:label>
                        <xf:action ev:event="DOMActivate">
                            <xf:dispatch name="submission" targetid="prosopo"/>
                        </xf:action>
                    </xf:trigger>
                </xf:dialog>
                <xf:trigger>
                    <xf:label>Enregistrer</xf:label>
                    <!-\-we are using xf:delete to distinguish which submission module we need (prosopo or inventory)-\->
                    <xf:delete nodeset="instance('xprInventory')/*" ev:event="DOMActivate"/>
                    <xf:action if="/eac:eac-cpf/@xml:id" ev:event="DOMActivate">
                        <xf:show dialog="control"/>
                    </xf:action>
                    <xf:action if="not(/eac:eac-cpf/@xml:id)" ev:event="DOMActivate">
                        <xf:dispatch name="submission" targetid="prosopo"/>
                    </xf:action>
                </xf:trigger>
            </span>-->
        </xf:case>
    </xf:switch>
    </form>
  </body>
</html>
